openapi: "3.0.0"
info:
  title: delivery

  version: "1.0.0"
# security:
#      - JWT: []
servers:
  - url: http://localhost:8005
paths:
  /delivery:
   post:
      tags:
        - delivery
      summary: create delivery
      description: create new delivery 
      parameters:
        - name: 'Authorization'
          in: header
          required: true
          description: JWT token
          schema:
            type: string
            format: string
            example: a2f6b8d7-8e5c-4023-913f-6f81d4ca92b0
      requestBody:
        description: Request to create new delivery
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/RequestBody'
        required: true
      responses:
        '200':
          description: successfully created orde
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliverySchema'
        
        '404':
          description: 'Not Found: This response is shown if the request for information is not there or it could not be imported'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
   get:
      summary: Get all delivery
      description: Get an existing test
      parameters:
        - name: 'Authorization'
          in: header
          required: true
          description: JWT token
          schema:
            type: string
            format: string
            example: a2f6b8d7-8e5c-4023-913f-6f81d4ca92b0
      tags:
        - delivery
      # parameters:
      #   - name: 'advisorId'
      #     in: path
      #     required: true
      #     description: The UUID of advisor
      #     example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      #     schema:
      #       type: string
      #       format: uuid
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliverySchema'
        "400":
          description: Invalid request payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The provided deliveryId is not valid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: delivery not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /delivery/{deliveryId}:
   get:
      summary: Get particular delivery 
      description: Get single delivery
      parameters:
        - name: 'deliveryId'
          in: path
          required: true
          description: The UUID of the delivery
          schema:
            type: string
            format: string
            example: a2f6b8d7-8e5c-4023-913f-6f81d4ca92b0

        - name: 'Authorization'
          in: header
          required: true
          description: JWT token
          schema:
            type: string
            format: string
            example: a2f6b8d7-8e5c-4023-913f-6f81d4ca92b0
      tags:
        - delivery
      # parameters:
      #   - name: 'advisorId'
      #     in: path
      #     required: true
      #     description: The UUID of advisor
      #     example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      #     schema:
      #       type: string
      #       format: uuid
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliverySchema'
        "400":
          description: Invalid request payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The provided deliveryId is not valid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Post not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
   patch:
      tags:
        - delivery
      parameters:
        - name: 'deliveryId'
          in: path
          required: true
          description: The UUID of delivery
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid
        - name: 'Authorization'
          in: header
          required: true
          description: JWT token
          schema:
            type: string
            format: string
            example: a2f6b8d7-8e5c-4023-913f-6f81d4ca92b0
      summary: update the existing delivery
      description: update the existing delivery
      responses:
        '200':
          description: delivery updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: delivery updated successfully.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: delivery not found
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The provided deliveryId is not valid, 1234
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
 
   delete:
      tags:
        - delivery
      parameters:
        - name: 'deliveryId'
          in: path
          required: true
          description: The UUID of delivery
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid

        - name: 'Authorization'
          in: header
          required: true
          description: JWT token
          schema:
            type: string
            format: string
            example: a2f6b8d7-8e5c-4023-913f-6f81d4ca92b0
      summary: Delete the delivery
      description: Deletes the delivery and set the status to inactive. Returns a message after deleting the post
      requestBody:
        description: Request to delete delivery
        content:
          application/json:
            schema:
              type: object
              properties:
                deletedBy:
                  type: string
                  example: user@zenmonk.tech    
        required: true
      responses:
        '200':
          description: delivery deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: delivery deleted successfully.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: delivery not found
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The provided deliveryId is not valid.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
  


components:
  schemas:
    deliverySchema:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        location:
          type: string    
        phone:
          type: number
        delivery_status:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
          description: Creation date and time
          example: "2023-07-25T08:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Updation date and time
          example: "2023-07-25T08:30:00Z"     


    RequestBody:
      type: object
      properties:
        orderId:
          type: string
        location:
          type: string    
        phone:
          type: number
        delivery_status:
          type: string
          example: confirmed
       