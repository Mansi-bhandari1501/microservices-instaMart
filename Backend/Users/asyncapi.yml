asyncapi: 2.6.0
#Info of the application
info:
  title:  User Server
  version: '1.0'
  description: Whenever user updated it publish data
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

channels:
  user.user_signedup:
    publish:
      description: The topic on which measured values may be produced
      summary: Inform about a user logged in the system
      operationId: UserSignedUp
      message:
        $ref: "#/components/messages/UserSignedUp"
  user.user_login:  
    publish:
      description: The topic on which measured values may be produced
      summary: Inform about a user logined up in the system
      operationId: UserLoggedIn
      message:
        $ref: "#/components/messages/UserLoggedIn"
  user.user_update:
    publish:
      description: The topic on which measured values may be produced
      summary: Inform about a user updated its details in the system
      operationId: UpdateUser
      message:
        $ref: "#/components/messages/UserUpdated"
  user.user_delete:
    publish:
      description: The topic on which measured values may be produced
      summary: Inform about a user deleted in the system
      operationId: DeleteUser
      message:
        $ref: "#/components/messages/UserDeleted"    


components:
  messages:
    UserSignedUp:
      name: UserSignedUp
      title: user register event
      summary: Inform about a user register in the system
      contentType: application/json
      payload:
        type: object
        properties:
          uuid:
            type: string
            example: 095be615-a8ad-4c33-8e9c-c7612fbf6c9f 
            description: Unique ID for the Object
          fired_at:
            type: string
            format: date-time
            description: Date that the event was fired
          user:
            $ref: '#/components/schemas/UserPayload'
   
    UserLoggedIn:
      name: UserSignedUp
      title: user login event
      summary: Inform about a user logged in the system
      contentType: application/json
      payload:
        type: object
        properties:
          uuid:
            type: string
            example: 095be615-a8ad-4c33-8e9c-c7612fbf6c9f 
            description: Unique ID for the Object
          fired_at:
            type: string
            format: date-time
            description: Date that the event was fired
          user:
            $ref: '#/components/schemas/UserPayload'
    
    UserUpdated:
      name: UserUpdated
      title: user updated event
      summary: Inform about a user updated its details in the system
      contentType: application/json
      payload:
        type: object
        properties:
          uuid:
            type: string
            example: 095be615-a8ad-4c33-8e9c-c7612fbf6c9f 
            description: Unique ID for the Object
          fired_at:
            type: string
            format: date-time
            description: Date that the event was fired
          user:
            $ref: '#/components/schemas/UserPayload'
    UserDeleted:
      name: UserDeleted
      title: user deleted event
      summary: Inform about a user deleted from the system
      contentType: application/json
      payload:
        type: object
        properties:
          uuid:
            type: string
            example: 095be615-a8ad-4c33-8e9c-c7612fbf6c9f 
            description: Unique ID for the Object
          fired_at:
            type: string
            format: date-time
            description: Date that the event was fired
          user:
            $ref: '#/components/schemas/UserPayload'

  schemas:
    UserPayload:
      # title: The signed up user object
      # type: object
      # description: The user object holds all the data related to the signed-up student
      required:
        - uuid
        - email
        - password
        - role
      
      properties: 
        uuid:
          type: string
          format: uuid
          description: Unique Id for Object
        user_name:
          type: string
          description: User Name
        password:
          type: string
          description: The password for the user account
        email:
          type: string
          description: An Email Address
          example: user_name@domain.com
        address:
          type: string
          description: Address of user
          example: user_name@domain.com
        role:
          type: string
          enum:
            - customer
            - vendor
            - admin
            - deliveryMan
          description: type of role user have  
          example: customer
        createdAt:
          type: string
          description: The created date
          format: date-time
        updatedAt:
          type: string
          description: updated date
          format: date-time
        
    # UserLoggedInPayload:
    #   title: The signed up user object
    #   type: object
    #   description: The user object holds all the data related to the signed-up student
    #   required:
    #     - uuid
    #     - email
    #     - password
    #   properties: 
    #     uuid:
    #       type: string
    #       format: uuid
    #       description: Unique Id for Object
    #     user_name:
    #       type: string
    #       description: User Name
    #     password:
    #       type: string
    #       description: The password for the user account
    #     email:
    #       type: string
    #       description: An Email Address
    #       example: user_name@domain.com
    #     role:
    #       type: string
    #       description: type of role user have  
    #       example: customer
    #     createdAt:
    #       type: string
    #       description: The created date
    #       format: date-time
    #     updatedAt:
    #       type: string
    #       description: updated date
    #       format: date-time
        
  
 